DateTable = 
// Global controls
VAR yearsAgo = 4
VAR yearsAhead = 1
VAR startingYear =
    YEAR ( NOW () ) - yearsAgo
VAR endingYear =
    YEAR ( NOW () ) + yearsAhead
VAR startDate =
    DATE ( YEAR ( NOW () ) - yearsAgo, MONTH ( NOW () ), DAY ( NOW () ) )
VAR endDate =
    DATE ( YEAR ( NOW () ) + yearsAhead, MONTH ( NOW () ), DAY ( NOW () ) )
VAR weekStart = 1 // 1 : Sunday(1), 2 : Monday(1), 3 : Monday(0)
RETURN
    // Generating Holiday information using start/end dates above
    VAR holidayTable =
        DATATABLE (
            "HolidayIndex", INTEGER,
            "HolidayMonthNumber", INTEGER,
            "DayNumber", INTEGER,
            "WeekDayNumber", INTEGER,
            "OffsetWeek", INTEGER,
            "HolidayName", STRING,
            {
                { 1, 1, 1, 0, 0, "New Year's Day" },
                { 2, 1, 0, 1, 3, "Martin Luther King, Jr." },
                { 3, 2, 0, 1, 3, "Presidents' Day" },
                { 4, 5, 0, 1, -1, "Memorial Day" },
                { 5, 7, 4, 0, 0, "Independence Day" },
                { 6, 9, 0, 1, 1, "Labor Day" },
                { 7, 10, 0, 1, 2, "Columbus Day" },
                { 8, 11, 11, 0, 0, "Veterans Day" },
                { 9, 11, 0, 4, 4, "Thanksgiving Day" },
                { 10, 12, 25, 0, 0, "Christmas Day" }
            }
        )
    VAR holidayDates =
        GENERATE (
            GENERATE ( GENERATESERIES ( startingYear, endingYear, 1 ), holidayTable ),
            VAR holidayYear = [Value]
            VAR holidayDate =
                SWITCH (
                    TRUE (),
                    [DayNumber] <> 0
                        && [HolidayMonthNumber] <= 12, DATE ( holidayYear, [HolidayMonthNumber], [DayNumber] ),
                    [WeekDayNumber] <> 0,
                    VAR ReferenceDate =
                        DATE ( HolidayYear, 1
                            + MOD ( [HolidayMonthNumber] - 1 + IF ( [OffsetWeek] < 0, 1 ), 12 ), 1 )
                            - IF ( [OffsetWeek] < 0, 1 )
                    VAR ReferenceWeekDayNumber =
                        WEEKDAY ( ReferenceDate, 1 ) - 1
                    VAR Offset =
                        [WeekDayNumber] - ReferenceWeekDayNumber
                            + 7 * [OffsetWeek]
                            + IF (
                                [OffsetWeek] > 0,
                                IF ( [WeekDayNumber] >= ReferenceWeekDayNumber, - 7 ),
                                IF ( ReferenceWeekDayNumber >= [WeekDayNumber], 7 )
                            )
                    RETURN
                        ReferenceDate + Offset
                )
            VAR holidayDayOfWeek =
                WEEKDAY ( holidayDate, weekStart )
            RETURN
                ROW (
                    "Date", DATE ( YEAR ( holidayDate ), MONTH ( holidayDate ), DAY ( holidayDate ) )
                )
        ) // End raw holiday dates creation
    VAR dateList =
        CALENDAR ( startDate, endDate )
    VAR holidayDateTable =
        // Mashes holiday dates with calendar table of dates from start/end defined in global control section
        NATURALLEFTOUTERJOIN (
            dateList,
            holidayDates
        )
    VAR generatedDateTable =
        GENERATE (
            // Generates cartesian product of holiday calendar table and row iterator
            holidayDateTable,
            // Need these here. All are based off of [Date] which isn't generated until holidayDateTable is used above.
            VAR currentDate = [Date]
            VAR day =
                DAY ( currentDate )
            VAR monthNumber =
                MONTH ( currentDate )
            VAR year =
                YEAR ( currentDate )
            VAR weekNumber =
                WEEKNUM ( currentDate, weekStart )
            VAR quarter =
                ROUNDUP ( monthNumber / 3, 0 )
            VAR monthName =
                SWITCH (
                    monthNumber,
                    1, "January",
                    2, "February",
                    3, "March",
                    4, "April",
                    5, "May",
                    6, "June",
                    7, "July",
                    8, "August",
                    9, "September",
                    10, "October",
                    11, "November",
                    12, "December"
                )
            VAR dayOfWeekNumber =
                WEEKDAY ( currentDate, weekStart )
            VAR dayOfWeekName =
                SWITCH (
                    weekStart,
                    1, SWITCH (
                        dayOfWeekNumber,
                        1, "Sunday",
                        2, "Monday",
                        3, "Tuesday",
                        4, "Wednesday",
                        5, "Thursday",
                        6, "Friday",
                        7, "Saturday"
                    ),
                    2, SWITCH (
                        dayOfWeekNumber,
                        1, "Sunday",
                        2, "Monday",
                        3, "Tuesday",
                        4, "Wednesday",
                        5, "Thursday",
                        6, "Friday",
                        7, "Saturday"
                    ),
                    3, SWITCH (
                        dayOfWeekNumber,
                        1, "Sunday",
                        2, "Monday",
                        3, "Tuesday",
                        4, "Wednesday",
                        5, "Thursday",
                        6, "Friday",
                        7, "Saturday"
                    )
                )
            VAR isFirstDayOfWeek =
                IF ( dayOfWeekNumber = 1, TRUE, FALSE )
            VAR dayIndex =
                INT ( currentDate - TODAY () )
            VAR weekIndexDay =
                // Relative to the current date, NOT the current week
                INT (
                    ROUNDDOWN ( dayIndex / 8, 0 )
                )
            VAR weekIndexCalendar =
                // Relative to the week number of current date, NOT the current date by itself
                SWITCH (
                    TRUE (),
                    currentDate < TODAY (), DATEDIFF ( currentDate, NOW (), WEEK ) * -1,
                    currentDate > TODAY (), DATEDIFF ( NOW (), currentDate, WEEK ),
                    0
                )
            VAR firstDayCurrentYear =
                DATE ( year, 1, 1 )
            VAR lastDayCurrentYear =
                DATE ( year, 12, 31 )
            VAR firstDayNextYear =
                DATE ( year + 1, 1, 1 )
            VAR lastDayNextYear =
                DATE ( year + 1, 12, 31 )
            VAR firstDayLastYear =
                DATE ( year - 1, 1, 1 )
            VAR lastDayLastYear =
                DATE ( year - 1, 12, 31 )
            VAR isHoliday =
                IF ( NOT ( ISBLANK ( [HolidayName] ) ), TRUE, FALSE )
            VAR isWorkingDay =
                IF (
                    NOT ( dayOfWeekName = "Saturday"
                        || dayOfWeekName = "Sunday" )
                        && isHoliday = FALSE (),
                    TRUE,
                    FALSE
                )
            RETURN
                ROW ( "IsHoliday", isHoliday,
                "Day", day,
                "IsWorkingDay", isWorkingDay,
                "MonthNumber", monthNumber,
                "Year", year,
                "Quarter", quarter,
                "MonthName", monthName,
                "WeekNumber", weekNumber,
                "DayOfWeekNumber", dayOfWeekNumber,
                "DayOfWeekName", dayOfWeekName,
                "IsFirstDayOfWeek", isFirstDayOfWeek,
                "DayIndex", dayIndex,
                "WeekIndexDay", weekIndexDay,
                "WeekIndexCalendar", weekIndexCalendar )
        )
    RETURN
        generatedDateTable
